# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# Include the recommended set of lints for Flutter apps, packages, and plugins.
include: package:flutter_lints/flutter.yaml

analyzer:
  # Exclude specific files and directories from analysis.
  exclude:
    - "**/*.g.dart"  # Exclude generated files with .g.dart extension
    - "**/*.freezed.dart"  # Exclude generated files with .freezed.dart extension
    - lib/generated/**  # Exclude generated code in the lib/generated directory
    - generated_plugin_registrant.dart  # Exclude specific generated file

# Customize the level of severity for specific errors and warnings.
errors:
  missing_required_param: error  # Report missing required parameters as errors
  missing_return: error  # Report missing return values as errors
  unawaited_futures: warning  # Report unawaited futures as warnings
  unused_import: warning  # Report unused imports as warnings
  prefer_const_constructors: info  # Report non-const constructors as info
  prefer_const_constructors_in_immutables: info  # Report non-const constructors in immutable classes as info

linter:
  # Customize lint rules to apply to this project.
  # Rules can be customized here to enable or disable specific lints.
  # More information about available lint rules can be found at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # To disable a lint rule for the entire project, list it here.
  # Alternatively, use `// ignore: name_of_lint` or `// ignore_for_file: name_of_lint`
  # to suppress the lint for specific lines or files.
  rules:
    always_declare_return_types: true  # Require return types to be declared
    always_specify_types: true  # Require types to be explicitly specified
    prefer_final_fields: true  # Prefer final fields where possible
    prefer_single_quotes: true  # Prefer single quotes for strings
    sort_constructors_first: true  # Sort constructors before other methods
    sort_unnamed_constructors_first: true  # Sort unnamed constructors before other methods
    avoid_returning_null_for_void: true  # Avoid returning null from void functions
    prefer_is_empty: true  # Prefer using `isEmpty` to check for empty collections
    prefer_is_not_empty: true  # Prefer using `isNotEmpty` to check for non-empty collections
    avoid_function_literals_in_foreach_calls: true  # Avoid using function literals in foreach calls
    prefer_function_declarations_over_variables: true  # Prefer function declarations over function variables
    type_init_formals: true  # Prefer initializing fields in constructors
    unnecessary_lambdas: true  # Avoid unnecessary lambda functions
    avoid_relative_lib_imports: true  # Avoid relative imports within the lib directory
    prefer_asserts_in_initializer_lists: true  # Prefer asserts in initializer lists
    avoid_redundant_argument_values: true  # Avoid redundant argument values
    require_trailing_commas: true # Require trailing commas